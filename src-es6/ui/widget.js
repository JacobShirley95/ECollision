// Generated by CoffeeScript 2.2.2
var Widget, rgb2hex;

rgb2hex = function(rgb) {
  var hex;
  if (rgb.search("rgb") === -1) {
    return rgb;
  } else {
    rgb = rgb.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+))?\)$/);
    hex = function(x) {
      return ("0" + parseInt(x).toString(16)).slice(-2);
    };
    return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
  }
};

export default Widget = class Widget {
  constructor(canvasName) {
    this.canvasName = canvasName;
    this.canvas = $("#" + this.canvasName);
    this.hidden = false;
    this.width = this.canvas.width();
    this.height = this.canvas.height();
    this.canvas.attr("width", this.width);
    this.canvas.attr("height", this.height);
    this.stage = new createjs.StageGL(this.canvasName);
    this.stage.setClearColor(rgb2hex(this.canvas.css("background-color")));
  }

  init() {}

  addEventListener(event, handler) {
    return this.stage.addEventListener(event, handler);
  }

  draw(interpolation) {}

  restart() {}

  stop() {}

  resume() {
    return this.paused = false;
  }

  pause() {
    return this.paused = true;
  }

  resize(newWidth, newHeight) {
    if (typeof newWidth === "undefined") {
      this.width = this.canvas.width();
      this.height = this.canvas.height();
    } else {
      this.width = newWidth;
      this.height = newHeight;
    }
    this.canvas.attr("width", this.width);
    return this.canvas.attr("height", this.height);
  }

  show() {
    this.hidden = false;
    return this.canvas.fadeIn(200);
  }

  hide() {
    this.hidden = true;
    return this.canvas.fadeOut(200);
  }

};
